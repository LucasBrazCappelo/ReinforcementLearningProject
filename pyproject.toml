[tool.poetry]
name = "ReinforcementLearningProject"
version = "0.1.0"
description = "A first Reinforcement Learning Project including a DQN agent."
authors = ["Lucas Braz <lucas.braz@cpe.fr>"]
license = "Apache-2.0"
readme = "README.md"
repository = "https://github.com/LucasBrazCappelo/ReinforcementLearningProject"
packages = [{ include = "ReinforcementLearningProject", from = "."}]
classifiers=[
    "Natural Language :: English",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
]

[tool.poetry.dependencies]
python = "^3.8"
numpy = "^1.24.3"
tqdm = "^4.65.0"
torch = "^1.10.0"
pandas = "^1.5.3"
joblib = "^1.2.0"
plotly = "^5.6.0"

[tool.poetry.group.dev.dependencies]
pre-commit = "^2.20.0"
isort = "==5.12.0"
black = "==23.3.0"
flake8 = "==6.0.0"
flake8-docstrings = "==1.7.0"
pyupgrade = "==v3.3.1"
docformatter = "==v1.4"
bandit = "==1.7.5"
shellcheck-py = "==v0.9.0.5"
mdformat = "==0.7.16"
codespell = "==v2.2.5"
nbstripout = "==0.6.1"
nbQA = "==1.7.0"

[tool.pytest.ini_options]
addopts = [
  "--color=yes",
  "--durations=0",
  "--strict-markers",
  "--doctest-modules",
]
filterwarnings = [
  "ignore::DeprecationWarning",
  "ignore::UserWarning",
]
log_cli = "True"
markers = [
  "slow: slow tests",
]
minversion = "6.0"
testpaths = "tests/"

[tool.coverage.report]
exclude_lines = [
    "pragma: nocover",
    "raise NotImplementedError",
    "raise NotImplementedError()",
    "if __name__ == .__main__.:",
]

[tool.black]
line-length = 100
exclude = "(.eggs|.git|.hg|.mypy_cache|.nox|.tox|.venv|.svn|_build|buck-out|build|dist)"

[tool.isort]
profile = "black"
line_length = 100
src_paths = ["ascent"]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B301"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
